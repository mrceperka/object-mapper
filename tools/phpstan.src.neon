includes:
	- phpstan.base.neon

parameters:
	level: 8
	resultCachePath: %currentWorkingDirectory%/var/tools/PHPStan/resultCache.src.php

	ignoreErrors:
		# Creation of unknown subclass which may require values in constructor
		- message: '#^Dead catch - ArgumentCountError is never thrown in the try block\.$#'
		  path: ../src/Creation/DefaultObjectCreator.php
		  count: 1
		# Values mapping to object
		- message: '#^Variable property access on Orisai\\ObjectMapper\\ValueObject\.$#'
		  path: ../src/Processing/DefaultProcessor.php
		  count: 3
		- message: '#^Variable property access on \$this\(Orisai\\ObjectMapper\\ValueObject\).$#'
		  path: ../src/ValueObject.php
		  count: 1
		# Callback call
		- message: '#^Variable static method call on class-string\<Orisai\\ObjectMapper\\ValueObject\>\.$#'
		  path: ../src/Callbacks/BaseCallback.php
		  count: 1
		- message: '#^Variable method call on Orisai\\ObjectMapper\\ValueObject\.$#'
		  path: ../src/Callbacks/BaseCallback.php
		  count: 1
		# File always exists
		- message: '#^Parameter \#1 \$filename of function filemtime expects string, string\|false given\.$#'
		  path: ../src/Meta/ClassModificationsChecker.php
		  count: 1
		- message: '#^Anonymous function should return (int|string) but returns (int|string)\|false\.$#'
		  path: ../src/Meta/ClassModificationsChecker.php
		  count: 2
		# Intentional check
		- message: "#^Call to method ReflectionClass\\<(.+)ValueObject\\>\\:\\:isSubclassOf\\(\\) with '(.+)ValueObject' will always evaluate to true\\.$#"
		  path: ../src/Meta/MetaLoader.php
		  count: 1
		- message: "#^Call to method ReflectionClass\\<(.+)Args\\>\\:\\:isSubclassOf\\(\\) with '(.+)Args' will always evaluate to true\\.$#"
		  path: ../src/Meta/MetaResolver.php
		  count: 1
		# PHPStan thinks that class_implements returns array<string> instead of array<class-string>
		- message: '#^Method (.+)ClassModificationsChecker\:\:getAllTypes\(\) should return array\<class\-string\> but returns array\<int, \(int\|string\)\>\.$#'
		  path: ../src/Meta/ClassModificationsChecker.php
		  count: 1
		# Generics
		# Generics - class-string-map https://psalm.dev/r/155368cea8
		- message: '#^Property (.+) with generic interface Orisai\\ObjectMapper\\Rules\\Rule does not specify its types\: T_ARGS$#'
		  paths:
		  	- ../src/Bridge/NetteDI/LazyRuleManager.php
		  	- ../src/Rules/DefaultRuleManager.php
		- message: '#^Method (.+)RuleManager\:\:getRule\(\) should return T of (.+)Rule but returns (.+)Rule\.$#'
		  paths:
		  	- ../src/Bridge/NetteDI/LazyRuleManager.php
		  	- ../src/Rules/DefaultRuleManager.php
		# Generics - phpstan resolves correct class-string as a constant string - but not on test site https://phpstan.org/r/ce7cd979-ab2f-4373-a589-f63bfa01ca33
		- message: '#^Method (.+)(Before|After)\:\:getType\(\) should return class-string\<(.+)Callback\<(.+)Args\>\> but returns ''(.+)Callback''\.$#'
		  paths:
		  	- ../src/Annotation/Callback/After.php
		  	- ../src/Annotation/Callback/Before.php
		- message: '#^Method (.+)\:\:getType\(\) should return class-string\<(.+)Rule\<(.+)Args\>\> but returns ''(.+)Rule''\.$#'
		  path:
		  	../src/Annotation/Expect
		- message: '#^Parameter \#1 \$type of method (.+)RuleMeta\:\:mayContainRuleType\(\) expects array\<class-string\<(.+)Rule(.+)\>\>, array{''(.+)Rule''} given\.$#'
		  path: ../src/Meta/MetaResolver.php
		- message: '#^Parameter \#5 \$callbackType of method (.+)\:\:(handleClass|apply)(Callbacks)\(\) expects class-string\<(.+)Callback\<(.+)Args\>\>, ''(.+)Callback'' given\.$#'
		  path: ../src/Processing/DefaultProcessor.php
